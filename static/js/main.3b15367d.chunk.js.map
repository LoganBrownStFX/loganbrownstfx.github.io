{"version":3,"sources":["redux/actions/types.js","redux/reducers/educationReducer.js","redux/reducers/index.js","redux/store.js","constants/strings.js","layout/Title/Title.js","layout/Landing/Landing.js","layout/Navbar/Navbar.js","constants/config.js","services/apiService.js","redux/actions/educationActions.js","layout/BasicCard/BasicCard.js","components/Common/Spinner.js","components/education/Education.js","components/github/Github.js","components/experience/Experience.js","components/contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["GET_EDUCATION","initialState","education","loading","combineReducers","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","strings","navbar","home","title","name","slogan","Title","id","className","Landing","Navbar","to","config","API_URL","DEV_URL","PROD_URL","ROUTES","EDUCATION","ADD_EDUCATION","getEducationCall","a","axios","get","educationObj","errors","body","message","educationLoading","useStyles","makeStyles","root","backgroundColor","height","width","BasicCard","props","classes","Card","children","color","Spinner","CircularProgress","Education","this","getEducation","educationContent","console","log","length","Component","connect","dispatch","res","data","Github","Experience","Contact","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b15367d.chunk.js","sourcesContent":["export const EDUCATION_LOADING = \"EDUCATION_LOADING\";\r\nexport const GET_EDUCATION = \"GET_EDUCATION\";\r\n","import { GET_EDUCATION, EDUCATION_LOADING } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  education: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case EDUCATION_LOADING: {\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    }\r\n    case GET_EDUCATION:\r\n      return {\r\n        ...state,\r\n        education: action.payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return {\r\n        ...state\r\n      };\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport educationReducer from \"./educationReducer\";\r\n\r\nexport default combineReducers({\r\n  education: educationReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","const strings = {\r\n  navbar: {\r\n    home: \"LGB\"\r\n  },\r\n  title: {\r\n    name: \"Logan Brown\",\r\n    slogan: \"Full stack to the core\"\r\n  }\r\n};\r\n\r\nexport default strings;\r\n","import React from \"react\";\r\nimport strings from \"../../constants/strings\";\r\n\r\nimport \"./Title.css\";\r\n\r\nfunction Title() {\r\n  return (\r\n    <div id=\"Title\" className=\"flex-container-column\">\r\n      <span className=\"name fadeInDown\">{strings.title.name}</span>\r\n      <span className=\"slogan fadeInUp\">{strings.title.slogan}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\n\r\nimport \"./Landing.css\";\r\n\r\nimport Title from \"../Title/Title\";\r\n\r\nfunction Landing() {\r\n  return (\r\n    <div className=\"main-content\">\r\n      <div className=\"landing-page flex-container-column flex-center\">\r\n        <Title />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className=\"space-between navbar flex-container-row\">\r\n      <Link to=\"/\">\r\n        <div className=\"home-nav-container flex-container-column flex-center\">\r\n          <span className=\"link fas fa-home icon\"></span>\r\n        </div>\r\n      </Link>\r\n      <section\r\n        id=\"link-container\"\r\n        className=\"nav-links flex-container-row flex-center\"\r\n      >\r\n        <Link to=\"/github\">\r\n          <span className=\"link fab github fa-github icon\"></span>\r\n        </Link>\r\n        <Link to=\"/education\">\r\n          <span className=\"link fa education fa-graduation-cap icon\"></span>\r\n        </Link>\r\n        <Link to=\"/experience\">\r\n          <span className=\"link fa experience fa-briefcase icon\"></span>\r\n        </Link>\r\n        <Link to=\"/contact\">\r\n          <span className=\"link fa contact-me fa-envelope icon\"></span>\r\n        </Link>\r\n      </section>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","const config = {\r\n  API_URL: {\r\n    DEV_URL: \"http://localhost:5000/api/\",\r\n    PROD_URL: \"https://loganbrown-api.herokuapp.com/api\"\r\n  },\r\n  ROUTES: {\r\n    EDUCATION: {\r\n      GET_EDUCATION: \"/education/\",\r\n      ADD_EDUCATION: \"/education/add\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default config;\r\n","import axios from \"axios\";\r\nimport config from \"../constants/config\";\r\n\r\nexport async function getEducationCall() {\r\n  try {\r\n    let educationObj = await axios.get(config.API_URL.PROD_URL + \"/education\");\r\n    return educationObj;\r\n  } catch (e) {\r\n    return {\r\n      errors: true,\r\n      body: e.message\r\n    };\r\n  }\r\n}\r\n","import { GET_EDUCATION, EDUCATION_LOADING } from \"./types\";\r\nimport { getEducationCall } from \"../../services/apiService\";\r\n\r\nexport function getEducation() {\r\n  return async dispatch => {\r\n    dispatch(educationLoading());\r\n    try {\r\n      const res = await getEducationCall();\r\n      dispatch({\r\n        type: GET_EDUCATION,\r\n        payload: res.data.education\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: GET_EDUCATION,\r\n        payload: {}\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport const educationLoading = () => {\r\n  return {\r\n    type: EDUCATION_LOADING\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#404040\",\r\n    height: \"25%\",\r\n    width: \"45%\"\r\n  }\r\n});\r\n\r\nfunction BasicCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className=\"content flex-container-column flex-center\">\r\n        {props.children}\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default BasicCard;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    color: \"#707070\"\r\n  }\r\n});\r\n\r\nfunction Spinner() {\r\n  const classes = useStyles();\r\n  return <CircularProgress className={classes.root} />;\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getEducation } from \"../../redux/actions/educationActions\";\r\n\r\nimport BasicCard from \"../../layout/BasicCard/BasicCard\";\r\nimport Spinner from \"../Common/Spinner\";\r\n\r\nclass Education extends Component {\r\n  componentDidMount() {\r\n    this.props.getEducation();\r\n  }\r\n\r\n  render() {\r\n    const { education } = this.props;\r\n    let educationContent;\r\n    console.log(education);\r\n    if (education.loading) {\r\n      educationContent = <Spinner />;\r\n    } else {\r\n      educationContent = <span>{education.education.length}</span>;\r\n    }\r\n    return (\r\n      <div className=\"flex-container-column flex-center\">\r\n        <BasicCard>{educationContent}</BasicCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEducation.propTypes = {\r\n  getEducation: PropTypes.func.isRequired,\r\n  education: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  education: state.education\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getEducation }\r\n)(Education);\r\n","import React, { Component } from \"react\";\r\nimport \"./Github.css\";\r\nclass Github extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"flex-container-column flex-center\">\r\n        <span>Github</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Github;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Experience extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"flex-container-column flex-center\">\r\n        <span>Experience</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Experience;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"flex-container-column flex-center\">\r\n        <span>Contact</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport Landing from \"./layout/Landing/Landing\";\nimport Navbar from \"./layout/Navbar/Navbar\";\nimport Education from \"./components/education/Education\";\nimport Github from \"./components/github/Github\";\nimport Experience from \"./components/experience/Experience\";\nimport Contact from \"./components/contact/Contact\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/education\" component={Education} />\n          <Route exact path=\"/github\" component={Github} />\n          <Route exact path=\"/experience\" component={Experience} />\n          <Route exact path=\"/contact\" component={Contact} />\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}